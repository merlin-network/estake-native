syntax = "proto3";
package estake.lscosmos.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "estake/lscosmos/v1beta1/lscosmos.proto";

option go_package = "github.com/merlin-network/estake-native/x/lscosmos/types";

option (gogoproto.equal_all) = true;
option (gogoproto.stringer_all) = false;
option (gogoproto.goproto_getters_all) = false;

message MinDepositAndFeeChangeProposal {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_stringer) = false;

  string title = 1;
  string description = 2;
  string min_deposit = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  string estake_deposit_fee = 4 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string estake_restake_fee = 5 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string estake_unstake_fee = 6 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string estake_redemption_fee = 7 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

message EstakeFeeAddressChangeProposal {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_stringer) = false;

  string title = 1;
  string description = 2;
  string estake_fee_address = 3
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message AllowListedValidatorSetChangeProposal {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_stringer) = false;

  string title = 1;
  string description = 2;
  AllowListedValidators allow_listed_validators = 3
      [ (gogoproto.nullable) = false ];
}
